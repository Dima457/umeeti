package main

import (
	"fmt"
	"log"
	"net/http"
	"os"
	"path/filepath"
	"strings"

	"github.com/gin-gonic/gin"
	"github.com/joho/godotenv"
)

// Глобальная переменная для подключения к БД (добавим позже)
// var db *pgxpool.Pool
//!Gin — веб-фреймворк , Gin — это высокопроизводительный веб-фреймворк для языка Go, который предоставляет простой и эффективный способ создания веб-приложений и API.
//!Use() — это метод в фреймворке Gin, который позволяет подключать middleware к роутеру. Middleware — это функции, которые выполняются до или после обработки HTTP-запроса.
//!Middleware — это функции, которые выполняются до обработки запроса контроллером. Используются для:Логирования,Аутентификации,Изменения запросов,Обработки ошибок
//! gin.Context — это основной объект в фреймворке Gin, который представляет HTTP-запрос и ответ. Он содержит всю информацию о текущем запросе и предоставляет методы для работы с ним.
//!Header -Заголовки HTTP — это важная часть HTTP-протокола, которая содержит метаинформацию о запросе или ответе. В Gin работа с заголовками осуществляется через объект контекста
//!AbortWithStatus — это метод в Gin, который прерывает обработку запроса и возвращает указанный HTTP-статус. Используется для раннего завершения обработки запроса при возникновении ошибок или других условий.
//!Next() — это ключевой метод в Gin, который отвечает за передачу управления следующему middleware или обработчику в цепочке. Он является основой для работы всей системы middleware в фреймворке.
//!MkdirAll — это встроенная функция в Go, которая создает директорию и все необходимые родительские директории в случае их отсутствия.
//!Работа с переменными окружения в Go (os.Getenv) Переменные окружения — это способ хранения конфигурационных данных вне кода приложения. В Go для работы с ними используется пакет os.
//! ShouldBind — это ключевой метод в фреймворке Gin для привязки данных из HTTP-запроса к структурам Go. Он позволяет автоматически парсить входящие данные и валидировать их.
//! FormFile — это метод в Gin для работы с загрузкой файлов через HTML-формы. Он позволяет получать загруженные файлы и сохранять их на сервере.
//!Работа с расширением файла через Ext(file.Filename) в Gin,Получение расширения файла — важная операция при обработке загружаемых файлов, которая позволяет определить тип файла и провести необходимую валидацию.
//!Sprintf — это функция форматирования строк, которая позволяет создавать строки с подстановкой значений переменных. Она является частью пакета fmt.
//!Join — это функция для объединения элементов слайса в одну строку с указанным разделителем. Она является частью пакета strings.
//! SaveUploadedFile — это процесс обработки и сохранения файлов, загруженных пользователем через HTTP-запрос.
//! Contains — это функция для проверки наличия подстроки в строке. Она является частью пакета strings.
func main(){
	godotenv.Load();

	router := gin.Default();

	router.Use(func )

}