import { Injectable, HttpException, HttpStatus } from "@nestjs/common";
import { HttpService } from "@nestjs/axios";
import { firstValueFrom } from "rxjs";
import { RegisterDto } from "./dto/register.dto";
import { LoginDto } from "./dto/login.dto";

@Injectable()                                                         //! –î–ï–ö–û–†–ê–¢–û–†: –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å –∫–∞–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å
export class AuthService {                                            //! –ö–õ–ê–°–°: –°–µ—Ä–≤–∏—Å —Å –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–æ–π
    constructor(private readonly httpService: HttpService) {}         //! –í–ù–ï–î–†–ï–ù–ò–ï: –ò–Ω–∂–µ–∫—Ç–∏—Ä—É–µ–º HttpService –¥–ª—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤

    private readonly REGISTER_SERVICE_URL = 'http://localhost:8081';
    private readonly LOGIN_SERVICE_URL =  'http://localhost:8080/login';                                                          //! –ö–û–ù–°–¢–ê–ù–¢–ê: URL –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

    async register(registerDto: RegisterDto) {                        //! –ú–ï–¢–û–î: –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        try {                                                         //! –ë–õ–û–ö: –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—à–∏–±–æ–∫
            const response = await firstValueFrom(                    //! –ü–†–û–ú–ò–°–ò–§–ò–ö–ê–¶–ò–Ø: –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Observable –≤ Promise
                this.httpService.post(                                //! HTTP –ó–ê–ü–†–û–°: POST –∑–∞–ø—Ä–æ—Å –∫ –≤–Ω–µ—à–Ω–µ–º—É —Å–µ—Ä–≤–∏—Å—É
                    `${this.REGISTER_SERVICE_URL}/register`,          //! URL: –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
                    registerDto                                       //! –¢–ï–õ–û: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                )
            );
            return response.data;                                     //! –í–û–ó–í–†–ê–¢: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
        } catch (error) {                                             //! –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö: –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–∞
            if (error.response) {                                     //! –£–°–õ–û–í–ò–ï: –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
                throw new HttpException(                              //! –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
                    error.response.data, 
                    error.response.status
                );
            }
            throw new HttpException(                                  //! –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                'Register service unavailable', 
                HttpStatus.SERVICE_UNAVAILABLE
            );
        }
    }
    async login(loginDto:LoginDto){
        try{
            const response = await firstValueFrom(
                this.httpService.post(`${this.LOGIN_SERVICE_URL}`,loginDto)
            );
            return response.data;
        }catch(error){
            if (error.response){
                throw new HttpException(error.response.data, error.response.ststus);
            }
            throw new HttpException('Login service unavaliable', HttpStatus.SERVICE_UNAVAILABLE);
        }
    }
}

//! constructor() - –ö–û–ù–°–¢–†–£–ö–¢–û–† –ö–õ–ê–°–°–ê
//? –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤
//? –í NestJS –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è Dependency Injection
//? –ü—Ä–∏–º–µ—Ä: constructor(private service: Service) {}

//! async/await - –ê–°–ò–ù–•–†–û–ù–ù–û–ï –ü–†–û–ì–†–ê–ú–ú–ò–†–û–í–ê–ù–ò–ï
//? async - –æ–±—ä—è–≤–ª—è–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
//? await - –æ–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Promise
//? –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π –∫–æ–¥

//! firstValueFrom() - –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–ï OBSERVABLE
//? –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç RxJS Observable –≤ Promise
//? –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å async/await —Å Observable
//? –ò–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ 'rxjs'

//! üîÑ OBSERVABLE - –õ–ï–ù–ò–í–´–ô –ü–û–¢–û–ö –î–ê–ù–ù–´–•
//? üìç –ù–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (–ø–æ–¥–ø–∏—Å–∫–∏)
//? üìç –ú–æ–∂–µ—Ç –∏—Å–ø—É—Å–∫–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π
//? üìç –†–∞–±–æ—Ç–∞–µ—Ç —Å —Å–æ–±—ã—Ç–∏—è–º–∏ –≤–æ –≤—Ä–µ–º–µ–Ω–∏
//? üìç –ú–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç

//! üîî –ü–û–î–ü–ò–°–ö–ê (SUBSCRIPTION) - –ê–ö–¢–ò–í–ê–¶–ò–Ø –ü–û–¢–û–ö–ê
//? üìç –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Observable
//? üìç –ë–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ Observable "—Å–ø–∏—Ç"
//? üìç –° –ø–æ–¥–ø–∏—Å–∫–æ–π Observable "–ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è"
//? üìç –ú–æ–∂–Ω–æ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å

//! Observable - –≠–¢–û –ü–û–¢–û–ö –î–ê–ù–ù–´–•
//? –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ª–µ–Ω–∏–≤—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –∑–Ω–∞—á–µ–Ω–∏–π over time
//? –ú–æ–∂–µ—Ç –∏—Å–ø—É—Å–∫–∞—Ç—å multiple values (–º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π)
//? –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–æ–±—ã—Ç–∏—è–º–∏, HTTP –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏ —Ç.–¥.

//! HttpException() - –ö–õ–ê–°–° –ò–°–ö–õ–Æ–ß–ï–ù–ò–ô
//? –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ HTTP –æ—à–∏–±–∫–∏
//? –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å—Ç–∞—Ç—É—Å –∫–æ–¥
//? –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è NestJS Exception Filter

//! HttpStatus - –ü–ï–†–ï–ß–ò–°–õ–ï–ù–ò–ï HTTP –°–¢–ê–¢–£–°–û–í
//? –°–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥–æ–≤
//? –ü—Ä–∏–º–µ—Ä: HttpStatus.OK (200), HttpStatus.NOT_FOUND (404)
//? –£–ø—Ä–æ—â–∞–µ—Ç —á—Ç–µ–Ω–∏–µ –∫–æ–¥–∞

//! HttpService - –°–ï–†–í–ò–° HTTP –ó–ê–ü–†–û–°–û–í
//? –û–±–µ—Ä—Ç–∫–∞ –Ω–∞–¥ axios –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
//? –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Observable (RxJS)
//? –ò–∑ –º–æ–¥—É–ª—è @nestjs/axios

//! RegisterDto - DATA TRANSFER OBJECT (DTO)
//? –û–±—ä–µ–∫—Ç –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–ª–æ—è–º–∏
//? –û–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
//? –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–∂–∏–¥–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö


//! –°–¢–ê–¢–£–° –ö–û–î–´ –û–®–ò–ë–û–ö:
//? HttpStatus.INTERNAL_SERVER_ERROR (500) - –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
//? HttpStatus.SERVICE_UNAVAILABLE (503) - –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
//? HttpStatus.BAD_REQUEST (400) - –ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å

